\name{msviperCombinatorial}
\alias{msviperCombinatorial}
\title{msviper combinatorial analysis}
\usage{
  msviperCombinatorial(mobj, regulators = 100,
    nullmodel = NULL, minsize = NULL, adaptive.size = NULL,
    iterative = NULL, level = 10, verbose = TRUE)
}
\arguments{
  \item{mobj}{msviper object generated by \code{msviper}
  function}

  \item{regulators}{Either a number between 0 and 1
  indicating the p-value cutoff for individual TFs to be
  included in the combinations analysis; (>1) indicating
  the number of top TFs to be included in the combinations
  analysis; or a vector of character strings indicating the
  TF IDs to be included in the analysis}

  \item{nullmodel}{Matrix of genes by permutations
  containing the NULL model signatures. Taken from
  \code{mobj} by default}

  \item{minsize}{Number indicating the minimum allowed size
  for the regulons, taken from \code{mobj} by default}

  \item{adaptive.size}{Logical, whether the weight
  (likelihood) should be used for computing the size, taken
  from \code{mobj} by default}

  \item{iterative}{Logical, whether a two step analysis
  with adaptive redundancy estimation should be performed,
  taken from \code{mobj} by default}

  \item{level}{Integer, maximum level of combinatorial
  regulation}

  \item{verbose}{Logical, whether progression messages
  should be printed in the terminal}
}
\value{
  A msviper object
}
\description{
  This function performs combinatorial analysis for msviper
  objects
}
\examples{
data(bcellViper, package="bcellViper")
sig <- rowTtest(dset, "description", c("CB", "CC"), "N")$statistic
dnull <- ttestNull(dset, "description", c("CB", "CC"), "N")
mra <- msviper(sig, regulon, dnull)
mra <- msviperCombinatorial(mra, 50)
plot(mra, cex=.7)
}
\seealso{
  \code{\link{msviper}}
}

